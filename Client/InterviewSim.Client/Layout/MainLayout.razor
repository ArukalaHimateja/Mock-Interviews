@inherits LayoutComponentBase
@inject NavigationManager Nav
@inject IDialogService Dialog
@implements IDisposable

<MudLayout>
    <MudAppBar Color="Color.Primary">
        <MudText Typo="Typo.h6">InterviewSim</MudText>
        <MudSwitch Class="ms-auto" @bind-Checked="_darkMode" Color="Color.Secondary" OnChanged="_ => OnModeChanged()" />
    </MudAppBar>
    <MudDrawer Open="true" Elevation="1">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @if (_loadingState.IsLoading)
        {
            <div class="d-flex justify-center pa-4">
                <MudProgressCircular Indeterminate="true" />
            </div>
        }
        @Body
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter] MudThemeProvider? ThemeProvider { get; set; }
    [Inject] private LoadingState _loadingState { get; set; } = default!;
    private bool _darkMode;

    protected override void OnInitialized()
    {
        _loadingState.OnChange += StateHasChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && ThemeProvider != null)
        {
            await ThemeProvider.ApplyThemeAsync(_darkMode ? MudTheme.Dark : MudTheme.Default);
        }
    }

    private async Task OnModeChanged()
    {
        if (ThemeProvider != null)
        {
            await ThemeProvider.ApplyThemeAsync(_darkMode ? MudTheme.Dark : MudTheme.Default);
        }
    }

    public void Dispose()
    {
        _loadingState.OnChange -= StateHasChanged;
    }
}
